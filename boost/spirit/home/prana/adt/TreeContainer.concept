/*=============================================================================
    Copyright (c) 2001-2010 Joel de Guzman
    Copyright (c) 2001-2010 Hartmut Kaiser
    Copyright (c) 2010      Bryce Lelbach

    Distributed under the Boost Software License, Version 1.0. (See accompanying
    file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
=============================================================================*/

struct TreeContainer {
 public:
  typedef unspecified-type value_type;
  typedef unspecified-type reference;
  typedef unspecified-type const_reference;
  typedef unspecified-type pointer;
  typedef unspecified-type const_pointer;
 
  typedef unspecified-unsigned-integer size_type;
  typedef unspecified-forward-iterator iterator;
  typedef unspecified-forward-iterator const_iterator;

  void default_construct (void);

  void copy (TreeContainer const&);

  static TreeContainer make (void);
  
  void swap (TreeContainer&);

  void free (void);
  
  template<typename Container> Container get (void) const;

  iterator begin (void);
  const_iterator begin (void) const;

  iterator end (void);
  const_iterator end (void) const;

 unspecified-access-specifier:
  unspecified-type* first;
  unspecified-type* last;
};

