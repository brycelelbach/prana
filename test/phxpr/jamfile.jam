################################################################################
#   Copyright (c) 2001-2010 Joel de Guzman
#   Copyright (c) 2001-2010 Hartmut Kaiser
#   Copyright (c) 2010      Bryce Lelbach
#
#   Distributed under the Boost Software License, Version 1.0. (See accompanying
#   file BOOST_LICENSE_1_0.rst or copy at http://www.boost.org/LICENSE_1_0.txt)
################################################################################

import phxpr ;

run gc/collector.cpp : :
  : <library>/prana//phxpr
    <define>PHXPR_SP_ENABLE_DEBUG_HOOKS
  : gc_collector ; 

phxpr.run-phxi conditionals_boolean_literal_if_else : conditionals/boolean_literal_if_else ;
phxpr.run-phxi conditionals_boolean_literal_if : conditionals/boolean_literal_if ;
phxpr.run-phxi conditionals_lambda_if_delayed_evaluation : conditionals/lambda_if_delayed_evaluation ;
phxpr.run-phxi conditionals_lambda_if_else_delayed_evaluation : conditionals/lambda_if_else_delayed_evaluation ;
phxpr.run-phxi conditionals_if_delayed_evaluation : conditionals/if_delayed_evaluation ;
phxpr.run-phxi conditionals_if_else_delayed_evaluation : conditionals/if_else_delayed_evaluation ;
phxpr.run-phxi conditionals_nested_if_else : conditionals/nested_if_else ;
phxpr.run-phxi conditionals_nested_if : conditionals/nested_if ;

phxpr.run-phxi intrinsics_arithmetic : intrinsics/arithmetic ;
phxpr.run-phxi intrinsics_arithmetic_with_placeholders : intrinsics/arithmetic_with_placeholders ;
phxpr.run-phxi intrinsics_lambda_arithmetic : intrinsics/lambda_arithmetic ;
phxpr.run-phxi intrinsics_nested_arithmetic : intrinsics/nested_arithmetic ;
phxpr.run-phxi intrinsics_nested_arithmetic_with_placeholders : intrinsics/nested_arithmetic_with_placeholders ;
phxpr.run-phxi intrinsics_nested_lambda_arithmetic : intrinsics/nested_lambda_arithmetic ;

phxpr.run-phxi shadowing_anonymous_module_variable : shadowing/anonymous_module_variable ;
phxpr.run-phxi shadowing_anonymous_upvalue : shadowing/anonymous_upvalue ;
phxpr.run-phxi shadowing_nested_module_variable : shadowing/nested_module_variable ;
phxpr.run-phxi shadowing_nested_upvalue : shadowing/nested_upvalue ;

phxpr.run-phxi lambda_basic : lambda/basic ;
phxpr.run-phxi lambda_block : lambda/block ;
phxpr.run-phxi lambda_deep_nested_anonymous : lambda/deep_nested_anonymous ;
phxpr.run-phxi lambda_delayed_evaluation : lambda/delayed_evaluation ;
phxpr.run-phxi lambda_empty_expression : lambda/empty_expression ;
phxpr.run-phxi lambda_empty : lambda/empty ;
phxpr.run-phxi lambda_expression : lambda/expression ;
phxpr.run-phxi lambda_nested_anonymous : lambda/nested_anonymous ;
phxpr.run-phxi lambda_nested_block : lambda/nested_block ;
phxpr.run-phxi lambda_nested : lambda/nested ;

phxpr.run-phxi module_level_variables_alias_procedure : module_level_variables/alias_procedure ;
phxpr.run-phxi module_level_variables_boolean_literal : module_level_variables/boolean_literal ;
phxpr.run-phxi module_level_variables_double_literal : module_level_variables/double_literal ;
phxpr.run-phxi module_level_variables_integer_literal : module_level_variables/integer_literal ;
phxpr.run-phxi module_level_variables_named_lambda : module_level_variables/named_lambda ;
phxpr.run-phxi module_level_variables_nil_literal : module_level_variables/nil_literal ;
phxpr.run-phxi module_level_variables_return_procedure : module_level_variables/return_procedure ;
phxpr.run-phxi module_level_variables_string_literal : module_level_variables/string_literal ;

phxpr.run-phxi module_return_block : module_return/block ;
phxpr.run-phxi module_return_boolean_literal : module_return/boolean_literal ;
phxpr.run-phxi module_return_double_literal : module_return/double_literal ;
phxpr.run-phxi module_return_integer_literal : module_return/integer_literal ;
phxpr.run-phxi module_return_intrinsic : module_return/intrinsic ;
phxpr.run-phxi module_return_lambda : module_return/lambda ;
phxpr.run-phxi module_return_nil_literal : module_return/nil_literal ;
phxpr.run-phxi module_return_string_literal : module_return/string_literal ;

phxpr.run-phxi operator_expressions_lambda : operator_expressions/lambda ;
phxpr.run-phxi operator_expressions_lambda_side_effects : operator_expressions/lambda_side_effects ;

phxpr.run-phxi procedure_calls_as_arguments_basic : procedure_calls_as_arguments/basic ;
phxpr.run-phxi procedure_calls_as_arguments_placeholders : procedure_calls_as_arguments/placeholders ;

phxpr.run-phxi procedures_as_arguments_intrinsic : procedures_as_arguments/intrinsic ;
phxpr.run-phxi procedures_as_arguments_lambda_to_intrinsics : procedures_as_arguments/lambda_to_intrinsics ;
phxpr.run-phxi procedures_as_arguments_lambda_to_lambda : procedures_as_arguments/lambda_to_lambda ;
phxpr.run-phxi procedures_as_arguments_lambda_with_upvals : procedures_as_arguments/lambda_with_upvals ;
phxpr.run-phxi procedures_as_arguments_nested_lambda_to_intrinsics : procedures_as_arguments/nested_lambda_to_intrinsics ;
phxpr.run-phxi procedures_as_arguments_nested_lambda_to_lambda : procedures_as_arguments/nested_lambda_to_lambda ;
phxpr.run-phxi procedures_as_arguments_return_procedure : procedures_as_arguments/return_procedure ;

phxpr.run-phxi internal_variables_alias_procedure : internal_variables/alias_procedure ;
phxpr.run-phxi internal_variables_boolean_literal : internal_variables/boolean_literal ;
phxpr.run-phxi internal_variables_double_literal : internal_variables/double_literal ;
phxpr.run-phxi internal_variables_integer_literal : internal_variables/integer_literal ;
phxpr.run-phxi internal_variables_nil_literal : internal_variables/nil_literal ;
phxpr.run-phxi internal_variables_return_procedure : internal_variables/return_procedure ;
phxpr.run-phxi internal_variables_nested_return_procedure : internal_variables/nested_return_procedure ;
phxpr.run-phxi internal_variables_string_literal : internal_variables/string_literal ;

